#!/bin/bash -e
## This is a simplification of Gentoo's keychain(1), with these
## differences:
##
##  - assumes bash and Debian;
##  - no ANSI color escapes;
##  - uses /tmp (not /home), avoiding need for $HOSTNAME;
##  - dbus session support;
##  - assumes --agents dbus,ssh,gpg;
##  - no command-line options;
##  - no locking support to avoid races between twb-agents;
##
## To use it, add the following to your .profile and .xsession:
##
##   eval "$(twb-agents)"
##
## FIXME: this script sources $f's with known locations in /tmp.  An
## attacker could place arbitrary code in such a script and twb-agents
## would source it.  The test -O immediately before sourcing mitigate
## this, but does not solve it.
##
## NOTE: gpg-agent --enable-ssh-support exists, but it doesn't work.
## ssh-add hangs because gpg-agent tries to run pinentry-curses in
## gpg-agent's tty (since closed) rather than in ssh-add's
## tty... despite GPG_TTY being set.  Sigh!
##
## NOTE: Debian's default X session also starts agents.  To skip these
## unused, second duplicate instances, comment out "use-ssh-agent" and
## "use-session-dbus" in /etc/X11/Xsession.options.

umask 0077
d="${TMPDIR:-/tmp}/.twb-agents_$EUID"
test -O "$d" || mkdir "$d"

if dbus-launch --version &>/dev/null
then
    f="$d/dbus.sh"
    if  test -O "$f" && . "$f" &&
        test -n "$DBUS_SESSION_BUS_PID"  &&
        test -e /proc/"$DBUS_SESSION_BUS_PID"
    then cat "$f"
    else dbus-launch | tee "$f"
    fi
    echo export DBUS_SESSION_BUS_ADDRESS
    echo export DBUS_SESSION_BUS_PID
fi &

if type -p ssh-agent &>/dev/null
then
    f="$d/ssh.sh"
    if  test -O "$f" && . "$f" &&
        test -n "$SSH_AGENT_PID"  &&
        test -e /proc/"$SSH_AGENT_PID"
    then cat "$f"
    else ssh-agent -t12h | grep -v 'echo Agent pid' | tee "$f"
    fi
fi &

if gpg-agent --version &>/dev/null
then
    f="$d/gpg.sh"
    if  test -O "$f" && . "$f" &&
        gpg-agent &>/dev/null
    then cat "$f"
    else gpg-agent --daemon | tee "$f"
    fi
fi &

wait
