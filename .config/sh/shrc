#!/bin/sh

# alias stuff
alias grep="grep --color=auto"
alias ls="ls -h --color=auto"
alias htop="free -h; echo; uptime; echo; ps au"
alias ix="curl -F 'f:1=<-' ix.io"
alias poweroff="sudo /sbin/poweroff"
alias wget="wget --hsts-file=/dev/null"
# i once removed this having forgot how slow debian's site-lisp is -_-
alias emacs="emacs --no-site-lisp"

# so uh, yeeaaaaah... https://github.com/tmux/tmux/issues/142
alias tmux="tmux -f $HOME/.config/tmux/tmux.conf"

# if on gentoo, make startx use $HOME/.xsession
[ -n "$(uname -r | grep -i gentoo)" ] && alias startx="startx $HOME/.xsession"

# setup a PS1 that *should* work in any POSIX compliant shell
PS1="$USER@${HOSTNAME:=$(hostname)}:\$(pwd | sed 's/\/home\/'$USER'/~/')\$(git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ [\1]/')> "

# setup ksh if under ksh
if [ -n "$KSH_VERSION" ]; then
    # don't put duplicate lines or lines starting with space in the history.
    HISTCONTROL=ignorespace:ignoredups
    HISTFILE="$XDG_CACHE_HOME/ksh_history"
    HISTSIZE=10000

    # load ksh-completeions
    if [ -f "$XDG_CONFIG_HOME/sh/ksh-completion.sh" ]; then
        . "$XDG_CONFIG_HOME/sh/ksh-completion.sh"
    fi

fi

# ksh and bash prompt
if [ -n "$KSH_VERSION" ] || [ -n "$BASH_VERSION" ]; then
    # git info for prompt
    __git_branch() {
        BRANCH="$(git branch 2>/dev/null | awk '/^\*/{$1=""; $0=$0; $1=$1; print}')"
        [ -n "$BRANCH" ] && printf "%s" "$BRANCH"
    }

    __git_status() {
        if [ -n "$(__git_branch)" ]; then
            if [ -n "$(git status --short 2>/dev/null)" ]; then
                printf "1;31"
            else
                printf "32"
            fi
        fi
    }

    # overly complex due to tab completion breaking with simpler approaches -_-
    PS1='\[\e[0m\]\u@\h:\[\e[36m\]\w\[\e[0m\]$([ -n "$(__git_branch)" ] && printf " [")\[\e[$(__git_status)m\]$(__git_branch)\[\e[0m\]$([ -n "$(__git_branch)" ] && printf "]")> '

    # nice manpage colours
    man() {
        env \
            LESS_TERMCAP_mb=$(printf "\e[1m\e[38;5;202m") \
            LESS_TERMCAP_md=$(printf "\e[1m\e[38;5;202m") \
            LESS_TERMCAP_me=$(printf "\e[0m") \
            LESS_TERMCAP_so=$(printf "\e[1m\e[38;5;201m") \
            LESS_TERMCAP_se=$(printf "\e[0m") \
            LESS_TERMCAP_us=$(printf "\e[1m\e[38;5;193m") \
            LESS_TERMCAP_ue=$(printf "\e[0m") \
            man "$@"
    }
fi

# cleanup on exit
__cleanup() {
    rmdir ~/*
    rm ~/.*hist*
    rm ~/.lesshst
    rm ~/.viminfo
    rm -rf ~/.w3m
    clear
}

trap __cleanup EXIT
